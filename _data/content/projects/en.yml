# you can move this content to front matter of [language]/tabs/projects.md
###########################################################
#                Projects Page Data
###########################################################
page_data:
  main:
    header: "Project"
    info: "실습해본 미니프로젝트"
    text_color: "white"
    # if you don't want to use background image, comment it. back_color will be activated.
    img: ":projects-heading.jpg"
    back_color: "lightblue"

  category:
    - title: "기획"
      type: id_기획
      color: "gray"
    - title: "개발"
      type: id_개발
      color: "#62b462"
    - title: "Quote"
      type: id_quote
      color: "#2FD0ED"

  list:
    # example
    - type: id_example
      project_name: "project1"
      project_excerpt: "project1"
      img: ":project1_thumb.jpg"
      img_title: "img title1"
      date: "2022-7-13"
      post: |
        # Examples

        This is an example page to display markdown related styles for Mr. Green Jekyll Theme.

        ### Headings (centered)
        {:data-align="center"}

        # Heading 1

        ## Heading 2

        ### Heading 3

        #### Heading 4

        ##### Heading 5

        ###### Heading 6

        ***

        ### Paragraphs

        #### Paragraph

        **William Shakespeare**, Let me not to the marriage of true minds
        Admit impediments. Love is not love
        Which alters when it alteration finds,
        Or bends with the remover to remove.
        O no, it is an ever-fixed mark
        That looks on tempests and is never shaken;
        It is the star to every wand'ring barque,
        Whose worth's unknown, although his height be taken.
        Love's not Time's fool, though rosy lips and cheeks
        Within his bending sickle's compass come;
        Love alters not with his brief hours and weeks,
        But bears it out even to the edge of doom.
        If this be error and upon me proved,
        I never writ, nor no man ever loved.

        #### Texts

        Quoted text `Hello world`

        Bold text **Hello world**

        Italic text _Hello world_

        kbd text <kbd>Hello world</kbd>

        #### Blockquote

        > **William Shakespeare**, Let me not to the marriage of true minds
        Admit impediments. Love is not love
        Which alters when it alteration finds,
        Or bends with the remover to remove.
        O no, it is an ever-fixed mark
        That looks on tempests and is never shaken;
        It is the star to every wand'ring barque,
        Whose worth's unknown, although his height be taken.
        Love's not Time's fool, though rosy lips and cheeks
        Within his bending sickle's compass come;
        Love alters not with his brief hours and weeks,
        But bears it out even to the edge of doom.
        If this be error and upon me proved,
        I never writ, nor no man ever loved.

        ### Link

        This is [Mr. Green Jekyll Theme](https://github.com/MrGreensWorkshop/MrGreen-JekyllTheme), a simple theme built for [Jekyll](https://jekyllrb.com/).

        ### Picture

        ![such a lovely place](:projects-heading.jpg)

        ### Picture (centered)

        ![such a lovely place](:project1_thumb.jpg){:data-align="center"}

        ### Lists

        - Apple
        - Banana
        - Orange

        1. Fruits
            1. Apples
                - Granny Smith
                - Mutsu
            1. Bananas
                - Cavendish
                - Red
        1. Vegetables

        ***

        ### Tables

        #### Small Table (centered)

        | Fruits(not aligned) | Alignment (centered) | num (right align) |
        | ------------------- | :------------------: | ----------------: |
        | Apple               |       centered       |              9999 |
        | Banana              |  centered long text  |               999 |
        | Orange              |       centered       |                99 |
        | Lemon               |       centered       |                 9 |
        {:data-align="center"}

        #### Wide Table (centered)

        scroll enabled when page is narrow

        | Fruits | num (left align) | num (right align) | num  | num  | num  |
        | ------ | :--------------- | ----------------: | ---- | ---- | ---- |
        | Apple  | 1111             |              1111 | 2222 | 3333 | 4444 |
        | Banana | 111              |               111 | 222  | 333  | 444  |
        | Orange | 11               |                11 | 22   | 33   | 44   |
        | Lemon  | 1                |                 1 | 2    | 3    | 4    |
        {:data-align="center"}

        #### Wider Table

        scroll enabled when page is narrow

        | Fruits | num (left align) | num (right align) | num  | num  | num  | num  | num  | num  |
        | ------ | :--------------- | ----------------: | ---- | ---- | ---- | ---- | ---- | ---- |
        | Apple  | 1111             |              1111 | 2222 | 3333 | 4444 | 5555 | 6666 | 7777 |
        | Banana | 111              |               111 | 222  | 333  | 444  | 555  | 666  | 777  |
        | Orange | 11               |                11 | 22   | 33   | 44   | 55   | 66   | 77   |
        | Lemon  | 1                |                 1 | 2    | 3    | 4    | 5    | 6    | 7    |

        ### Code

        #### Quote

        ```python
        for i in range(5, 10):
          print(i)
        ```

    # picture
    - type: id_기획
      project_name: "기획서"
      project_excerpt: "사용 프로그램 - PPT"
      img: ":project2_thumb.jpg"
      img_title: "img title2"
      date: "2022-07-23"
      post: |
        # 기획서 링크
        [링크](https://docs.google.com/presentation/d/1fBBhT7DFplJPfdi0CSigSXwxNZnbshGl/edit?usp=sharing&ouid=107835762789489710964&rtpof=true&sd=true)
        

    - type: id_기획
      project_name: "ERD"
      project_excerpt: "사용 IDE - eclipse"
      img: ":project2_thumb.jpg"
      img_title: "img title2"
      date: "2022-07-25"
      post: |
        # ERD란
        시스템의 엔티티들이 무엇이 있는지, 어떤 관계가 있는지를 나타내는 다이어그램

        ![Image](:ERD.jpg)

    - type: id_기획
      project_name: "IA"
      project_excerpt: "IA - Information Architecture"
      img: ":project2_thumb.jpg"
      img_title: "img title2"
      date: "2022-07-25"
      post: |
        # IA란
        IA는 간단하게 말해서 서비스의 목차 역할을 수행합니다   
        웹 혹은 어플리케이션이 어떻게 구성되는지 보여주며 어떤 기능의   
        화면으로 보여지는지를 전체적으로 보여주는 도구입니다   
        이를 통해 개발자와 디자이너가 편하게 작업할 수 있도록 만든 문서이기도 하며   
        기존 웹 사이트처럼 복잡한 구조에서 사이트의 틀을 짜고 콘텐츠 구성 뿐만 아니라 디자인,   
        개발의 일정 관리도 통합해서 진행하였기 때문에 역할이 중요하였습니다   
        그러나 모바일 서비스가 많이지면서 한 페이지가 다수의 페이지 역할을 대신하면서   
        개발 페이지 목록의 역할이 강해지고 있는 추세 입니다   

        ![Image](:리뷰사이트 ia.png)

    # quote
    - type: id_개발
      project_name: "ERD 구현"
      project_excerpt: "MySQL 테이블 작성"
      #img: ":project1_thumb.jpg"
      #img_title: "img title3"
      date: "2021-05-27"
      post: |
        ```
        CREATE TABLE Board
        (
          board_no int(20) NOT NULL AUTO_INCREMENT,
          board_type varchar(100),
          board_name varchar(100),
          board_detail varchar(500),
          board_order int(20),
          member_no bigint(20) NOT NULL,
          created_at datetime,
          updated_at datetime,
          PRIMARY KEY (board_no)
        );

        CREATE TABLE Article
        (
          contents_no bigint(20) NOT NULL,
          article_no bigint(20) NOT NULL AUTO_INCREMENT,
          member_no bigint(20) NOT NULL,
          title varchar(500),
          detail text,
          rating int(20) NOT NULL,
          image varchar(500),
          likes int(20) NOT NULL DEFAULT 0,
          dislikes int(20) NOT NULL DEFAULT 0,
          created_at datetime NOT NULL,
          updated_at datetime,
          PRIMARY KEY (article_no)
        );

        create table contents 
        (
          board_no int(20) Not null comment '게시판 번호',
          contents_no bigint(20) not null auto_increment comment '작품 번호',
          member_no bigint(20) not null comment '회원 번호',
          contents_name varchar(200) not null comment '작품 이름',
          released_date varchar(20) comment '출시일',
          info text comment '작품 정보',
          average_rating double comment '평균 평점',
          thumbnailURL varchar(500) comment '썸네일 url',
          created_at datetime comment '작성일',
          updated_at datetime comment '수정일',
          primary key(contents_no)
        );

        CREATE TABLE Member
        (
          member_no bigint(20) NOT NULL AUTO_INCREMENT,
          member_grade varchar(50) NOT NULL,
          member_id varchar(50) NOT NULL,
          password varchar(50) NOT NULL,
          nickname varchar(50),
          email varchar(30),
          sign_date datetime NOT NULL,	
          phone_number varchar(20) COMMENT '하이픈없이',
          introduce varchar(1000),
          PRIMARY KEY (member_no)
        );

        CREATE TABLE Comment
        (
          comment_no bigint(20) NOT NULL AUTO_INCREMENT,
          article_no bigint(20) NOT NULL,
          member_no bigint(20) NOT NULL,
          comment_group bigint(20) not null,
          parent_no bigint(20) not null,
          nested_comment_order bigint(20) not null,
          depth bigint(20) not null,
          detail varchar(500) NOT NULL,
          created_at datetime NOT NULL,
          updated_at datetime,
          PRIMARY KEY (comment_no)
        );
        ```

    - type: id_개발
      project_name: "회원가입"
      project_excerpt: "유효성 검사"
      img: ":project2_thumb.jpg"
      img_title: "img title4"
      date: "2021-06-08"
      post: |
        간단한 회원가입 폼입니다   
        자바스크립트로 유효성 검사를 추가했습니다   
        ![Image](:회원가입 폼.jpg)
        ```
        function idRegexCheck(value) {
        var regExp = /^[a-z]+[a-z0-9]{6,50}$/g;
        return regExp.test(value);
        }

        function pwRegexCheck(value) {
          var regExp = /(?=.*\d{1,50})(?=.*[~`!@#$%\^&*()-+=]{1,50})(?=.*[a-zA-Z]{1,50}).{12,50}$/;
          return regExp.test(value);
        }
        
        function emailRegexCheck(value) {
          var regExp = /^[0-9a-zA-Z]([-_\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\.]?[0-9a-zA-Z])*\.[a-zA-Z]{2,3}$/i;
          return regExp.test(value);
        }
        
        $('#signup-form').submit(function () {
          
          var memberId = $('#memberId').val();
          var email = $('#email').val();
          var password = $('#password').val();
          var repeatPassword = $('#repeatPassword').val();
          var idCheck = $('#idCheck').val();
          debugger;
        
          if (memberId == '') {
            alert('아이디를 입력해주세요');
            return false;
          } else if (!idRegexCheck(memberId)) {
            alert('아이디는 영문+숫자조합 6자리 이상으로 입력해주세요')
            return false;
          } else if (email == '') {
            alert('이메일을 입력해주세요');
            return false;
          } else if (!emailRegexCheck(email)) {
            alert('이메일 양식에 맞게 입력해주세요');
            return false;
          } else if (password == '') {
            alert('비밀번호를 입력해주세요');
            return false;
          } else if(!pwRegexCheck(password)) {
            alert('비밀번호는 영문, 숫자, 특수문자 조합 12자리 이상으로 입력해주세요')
            return false;
          } else if (repeatPassword == '') {
            alert('비밀번호 확인란을 입력해주세요');
            return false;
          } else if (repeatPassword != password) {
            alert('비밀번호 확인이 틀렸습니다');
            return false;
          } else if(idCheck == "N") {
            alert('아이디 중복체크를 해주세요')
            return false;
          }
          
        });
        ```
    - type: id_개발
      project_name: "회원가입"
      project_excerpt: "아이디 중복체크"
      img: ":project1_thumb.jpg"
      img_title: "img title5"
      date: "2021-08-20"
      post: |
        회원가입시 아이디 중복체크를 하도록 합니다   
        ajax를 이용해 클라이언트-서버 간에 데이터를 주고받는 기능을 이용했습니다   
        1. 데이터 베이스의 아이디 컬럼 조회(xml파일)   
        ```
        <select id="idCheck" parameterType="kr.revieworld.mvc.parameter.MemberParameter" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE MEMBER_ID = #{memberId}
        </select>
        ```
        2. 컨트롤러   
        이 메서드는 @RestController가 붙은 클래스 안에 있습니다   
        @Controller가 붙은 클래스에 넣으려면 메서드에 @ResponseBody를 붙이면 됩니다   
        ```
        @PostMapping("/idCheck")
        public int idCheck(String memberId) {
        if (memberId == "") {
            log.info("아이디 중복체크 : {}", "아이디가 입력되지 않은 상태에서 submit");
            return -1;
        } else {
            int idCheckResult = memberService.idCheck(memberId);
            log.info("아이디 중복체크: {}", idCheckResult);
            return idCheckResult;
        }
        }
        ```
        3. 자바스크립트
        컨트롤러로부터 받은 데이터값에 따라   
        active클래스를 추가/제거해서 드러나는 문구를 추가합니다   
        ```
        function fn_idCheck() {
        $.ajax({
        url: "/api/idCheck",
        type: "POST",
        dataType: "JSON",
        data: {
        "memberId": $("#memberId").val()
        },
        success: function (data) {
        if(data == -1) {
        $('.id-not-input').addClass('active')
        $('.id-available').removeClass('active')
        $('.id-error').removeClass('active')
        } else if (data == 1) {
        $('.id-error').addClass('active')
        $('.id-available').removeClass('active')
        $('.id-not-input').removeClass('active')
        } else if (data == 0) {
        $("#idCheck").attr("value", "Y");
        $('.id-available').addClass('active')
        $('.id-error').removeClass('active')
        $('.id-not-input').removeClass('active')
        }
        }
        })
        }
        ```
        결과   
        ![Image](:아이디 중복체크.jpg)

    - type: id_개발
      project_name: "계층형 댓글"
      # project_excerpt: "Mahatma Gandhi "
      img: ":project2_thumb.jpg"
      img_title: "img title6"
      date: "2022-6-20"
      post: |
        Comment클래스는 아래와 같은 프로퍼티를 가집니다   
        parentNo : 부모댓글의 commentNo   
        depth : 대댓글의 달면 생기는 왼쪽 여백의 크기   
        commentGroup : 해당 댓글이 속한 그룹 번호   
        nestedCommentOrder : 그룹내의 정렬순서   
        <br/>
        대댓글을 다는 로직은 아래와 같습니다   
        1. 댓글을 다는 메서드는 2개인데 하나는 새 그룹을 만드는 댓글들 다는것이고   
        또 하나는 그룹내에서 대댓글을 다는 메서드입니다   
        2. 그룹을 새로만들시엔 가장 큰 commentGroup 수치를 찾아 +1해서 새 댓글을 만듭니다   
        3. 대댓글을 달시엔 현재 댓글을 달려고 하는 댓글의 마지막 자손 댓글 찾아 nestedCommentOrder값을 구하고 변수로 선언해둡니다   
        4. 3번에서 구한 마지막 자손댓글과 그 아래에 오는 모든 그룹내의 댓글의 nestedCommentOrder값을 +1 해줍니다   
        5. 추가되는 대댓글의 nestedCommentOrder값에 변수로 선언해둔 nestedCommentOrder값을 대입합니다   
        <br/>
        결과   
        ![Image](:대댓글.jpg)
    - type: id_개발
      project_name: "추천/비추"
      # project_excerpt: "Mahatma Gandhi "
      img: ":project2_thumb.jpg"
      img_title: "img title6"
      date: "2022-6-20"
      post: |
        Article클래스는 likes, dislikes라는 프로퍼티를 가집니다   
        클라이언트에서 클릭을 하면 ajax를 통해 데이터베이스의   
        컬럼값(likes 또는 dislikes)을 +1해주고   
        자바스크립트로 그 부분만 실시간 새로고침 해줍니다   
        <br/>
        <br/>
        결과   
        ![Image](:추천.jpg)
