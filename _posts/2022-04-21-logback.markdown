---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_Examples
title: "[스프링]lobgack사용으로 로그찍기"

# post specific
# if not specified, .name will be used from _data/owner.yml
author: Mr. Green's Workshop
# multiple category is not supported
category: 스프링
# multiple tag entries are possible
tags: [library]
# thumbnail image for post
img: ":Spring_Framework_logo.png"
# disable comments on this page
#comments_disable: true

# publish date
date: 2022-04-21 9:00:06 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-02-10 08:11:06 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

<!-- outline-end -->

# 사용목적   
로그레벨이나 로그표시 방식등을 수정   
<br/>

# DriverSpy라이브러리 추가   
implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'   

# application.properties설정   
logging.config=classpath:logback/logback-default.xml를 추가하고 아래와 같이 항목을 수정   
spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy   
spring.datasource.JdbcUrl=jdbc:log4jdbc:mysql://localhost:3306/songjavadb?allowMultiQueries=true&serverTimezone=UTC&characterEncoding=UTF-8   
<br/>

# logback-default.xml 추가   
resources.logback폴더에 logback-default.xml를 만들고 아래 내용 추가   

```
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss} %p %c[%method:%line] - %msg%n" />

    <appender name="STDOUT"
              class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${LOG_PATTERN}</Pattern>
        </layout>
    </appender>

    <logger name="lsj.lsjspring.repository">
        <level value="ERROR"/>
    </logger>

    <logger name="org.springframework.boot">
        <level value="ERROR"/>
    </logger>
    <logger name="org.springframework.boot.devtools.restart">
        <level value="ERROR"/>
    </logger>
    <logger name="org.springframework">
        <level value="ERROR"/>
    </logger>
    <logger name="springfox">
        <level value="ERROR"/>
    </logger>
    <logger name="org.hibernate">
        <level value="ERROR"/>
    </logger>
    <logger name="org.apache">
        <level value="ERROR"/>
    </logger>
    <logger name="org.apache.http.impl.conn">
        <level value="ERROR"/>
    </logger>

<!--    <logger name="log4jdbc">-->
<!--        <level value="ERROR"/>-->
<!--    </logger>-->

    <logger name="org.mybatis">
        <level value="ERROR"/>
    </logger>

    <logger name="com.zaxxer">
        <level value="ERROR"/>
    </logger>

    <!-- Query Loggers -->
    <logger name="jdbc" level="ERROR"/>
    <logger name="jdbc.connection" level="ERROR"/>
    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
    <logger name="jdbc.sqlonly" level="ERROR"/>
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
    <logger name="jdbc.sqltiming" level="ERROR"/>
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
    <logger name="jdbc.resultset" level="OFF"/>
    <logger name="jdbc.resultsettable" level="ERROR"/>
    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
    <logger name="jdbc.audit" level="OFF"/>

    <root level="DEBUG">
        <appender-ref ref="STDOUT" />
    </root>
</configuration>
```
<br/>

로그레벨에 따른 내용출력 수준은 다음과 같다   
![logback](:로그레벨.png)
   
   <br/>




