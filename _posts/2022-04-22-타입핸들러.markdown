---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_Examples
title: "[스프링]TypeHandler활용"

# post specific
# if not specified, .name will be used from _data/owner.yml
author: Mr. Green's Workshop
# multiple category is not supported
category: 스프링
# multiple tag entries are possible
tags: []
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
#comments_disable: true

# publish date
date: 2022-04-22 11:10:06 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-02-10 08:11:06 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

<!-- outline-end -->

# DB에 새 컬럼을 만들어 핸들러 적용   
새 컬럼의 이름은 DEL_YN으로 하고   
도메인 클래스에 delYn필드추가, xml에도 select, insert에 DEL_YN 추가   

<br/>

# 핸들러 클래스 만들기
mybatis.typehandler에 클래스 추가   
```
public class StringValueBooleanTypeHandler implements TypeHandler<Boolean> {

    @Override
    public void setParameter(PreparedStatement ps, int i, Boolean parameter, JdbcType jdbcType) throws SQLException {
        ps.setString(i, BooleanUtils.toString(parameter, "Y", "N"));
    } // 들어오는 boolean값에 따라 "Y", "N"으로 변환됨

    @Override
    public Boolean getResult(ResultSet rs, String columnName) throws SQLException {
        return BooleanUtils.toBoolean(rs.getString(columnName));
    }

    @Override
    public Boolean getResult(ResultSet rs, int columnIndex) throws SQLException {
        return BooleanUtils.toBoolean(rs.getString(columnIndex));
    }

    @Override
    public Boolean getResult(CallableStatement cs, int columnIndex) throws SQLException {
        return BooleanUtils.toBoolean(cs.getString(columnIndex));
    }
}
```

# xml파일 수정
```
<resultMap type="lsj.lsjspring.domain.Board" id="getListResultMap">
        <result column="DEL_YN" property="delYn" typeHandler="lsj.lsjspring.config.mybatis.typehandler.StringValueBooleanTypeHandler"/>
    </resultMap>

    <select id="getList" parameterType="lsj.lsjspring.framework.data.domain.PageRequestParameter" resultMap="getListResultMap">
```
쿼리를 보낼때 타입핸들러를 거치게 한다   

   <br/>




