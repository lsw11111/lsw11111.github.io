---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_Examples
title: "[자바]예외"

# post specific
# if not specified, .name will be used from _data/owner.yml
author: Mr. Green's Workshop
# multiple category is not supported
category: 자바
# multiple tag entries are possible
tags: []
# thumbnail image for post
img: ":자바.png"
# disable comments on this page
#comments_disable: true

# publish date
date: 2022-04-28 09:10:06 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-02-10 08:11:06 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

<!-- outline-end -->

# 오류
컴파일 오류 : 코드작성중 발생하는 문법적 오류 - 빨간색 경고   
실행오류 : 런타임에러. 의도하지 않은 동작(버그), 프로그램 중지되는 오류   
오류가 발생할수 있는 경우 로그를 남겨 분석-원인 찾아야함   
런타임에러로 비정상종료는 서비스 운영에 치명적   
자바는 예외처리를 통해 비정상종료를 막고 로그를 남길수 있음   
<br/>
시스템오류   
가상머신에서 발생, 프로그래머가 처리 불가능   
동적 메모리 없는경우나 스택 오버플로우 등   
<br/>
예외
프로그램에서 제어할수 있는 오류   
읽어들이려는 파일이 존재하지 않거나 네트워크가 끊어진 경우   
<br/>
예외 클래스   
Exception - IOException, RuntimeException 등   
많음   

# try-catch-finally로 예외 처리의 예
```
    int[] arr = {1,2,3,4,5};
		try {
		for (int i = 0; i < 6; i++) {
			System.out.println(arr[i]);
		} // try 실행시 오류가 발생한다면 catch로 넘어감
		} // try가 없다면 end는 출력되지 않고 예외발생
		catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
			return;
		} // 로그 남기는법 : 예외클래스를 자료형으로하는 객체를 출력
		finally {
			System.out.println("finally");
		}
		System.out.println("end");
		// catch에서 return을 넣어줘서 end는 x
	  // finally는 무조건 실행됨
```

# 예외 throw
```
		try {
			ex.loadClass("b.txt", "java.lang.String");
		} catch (FileNotFoundException e) {
			System.out.println(e);
		} catch (ClassNotFoundException e) {
			System.out.println(e);
		} catch (Exception e) {
			System.out.println(e);
		} // 어떤 예외가 발생할지 예상이 안될경우 최상위 클래스 Exception을 맨 마지막에 씀
		System.out.println("end");
```

# Exception의 상속을 받은 사용자 정의 예외클래스의 예시
```
public class IDFormatException extends Exception{
	// Exception으로부터 상속받게 하고 생성자 정의
	
	IDFormatException(String message){
		super(message); // Exception에 매개변수로 String을 받는 생성자가 있음
	}
}
```
위 예외클래스를 메서드에서 사용하는 예시   
```
public void setUserID(String userID) throws IDFormatException {
		if(userID == null) {
			throw new IDFormatException("아이디는 null일수 없습니다");
		}
		else if(userID.length() < 8 || userID.length() > 20){
			throw new IDFormatException("8자 이상 20자 이하로 쓰세요");
		}
		this.userID = userID;
	}
```
