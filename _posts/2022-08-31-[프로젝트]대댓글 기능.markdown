---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_Examples
title: "[프로젝트]댓글/대댓글"

# post specific
# if not specified, .name will be used from _data/owner.yml
author: Mr. Green's Workshop
# multiple category is not supported
category: 프로젝트
# multiple tag entries are possible
tags: []
# thumbnail image for post
img: ":Spring_Framework_logo.png"
# disable comments on this page
#comments_disable: true

# publish date
date: 2022-08-30 15:00:06 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-02-10 08:11:06 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

<!-- outline-end -->

# 계층형 댓글 구현
대댓글을 달려면 댓글을 달려고 '답글달기'를 클릭한 댓글의 정보가 필요한데   
이건 GetMapping을 통해 jsp파일에 뿌려져 있습니다   
이걸 PostMapping으로 가져와서 새 대댓글을 다는데 참조를 하는식입니다   

<br/>

컨트롤러 : commentList이라는 이름으로 addAttribute로 추가해줍니다   
![컨트롤러](:컨트롤러.jpg)   

<br/>

jsp : 컨트롤러에서 model에 추가한 commentList를   
c:forEach반복문으로 comment를 하나하나를 뿌립니다   
위쪽은 해당 comment의 정보가 뿌려져 있고   
아래쪽은 form태그 안에 input태그 type="hidden"으로 대댓글을 다는데 필요한 정보를   
PostMapping으로 가져옵니다   
![뷰](:대댓글 뷰.jpg)   
<br/>

![뷰](:메서드2.jpg)   

마지막 자식댓글을 찾는 쿼리      
![뷰](:마지막 자식댓글 찾기 쿼리.jpg)   

마지막 자식댓글 찾기를 while문으로 돌리기   
![뷰](:마지막 자식댓글 while문 돌리기.jpg)   

이러면 마지막 자손댓글이 searchUpdateDAO에 담겼습니다   
마지막 자손댓글의 order값+1을 변수에 담아두고   
뒤에 있는 댓글의 order를 +1씩 해주고(updateCommentOrder)   
변수에 담아뒀던걸로 inputComment의 order값을 set해준후 최종적으로 저장합니다   
![뷰](:찾은걸로 뒤에 오는 댓글 밀고 새 댓글 달기.jpg)   



